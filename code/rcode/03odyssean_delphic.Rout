
R version 3.5.2 (2018-12-20) -- "Eggshell Igloo"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> ################################################################################
> ## This file is part of the replication suite  of
> ## "Measuring Euro Area Monetary Policy"
> ## By Carlo Altavilla, Luca Brugnolini, Refet S. GÃ¼rkaynak, Roberto Motto, and
> ## Giuseppe Ragusa
> ##
> ## This file produces: Figure5.pdf (Odyssean vs Delphic policy events)
> ##
> ################################################################################
> 
> library(pacman)
> 
> p_load(tidyverse, gridExtra, reshape2, lubridate, scales)
> 
> base_path <- readLines("dir.conf")
> 
> r_path <- paste0(base_path, "/code/rcode/")
> g_path <- paste0(base_path, "/code/rcode/output_figure/")
> j_path <- paste0(base_path, "/code/jcode/")
> s_path <- paste0(base_path, "/raw_data/")
> d_path <- paste0(base_path, "/data/")
> 
> 
> df <- read_csv(paste0(d_path, "ilsdailydata.csv"))
Parsed with column specification:
cols(
  Date = col_date(format = ""),
  DOIS2Ydy = col_double(),
  DILS2Ydy = col_double(),
  DLOGSTOXXdy = col_double(),
  ConfFactor1 = col_double(),
  ConfFactor2 = col_double(),
  ConfFactor3 = col_double()
)
> 
> ## Predict on Factors
> 
> dstock <- df$DLOGSTOXXdy
> dois <- df$DOIS2Ydy
> dils <- df$DILS2Ydy
> 
> 
> mp_pre <- c(NA, fitted(lm(DOIS2Ydy~ConfFactor1+ConfFactor2, data = df %>% filter(Date<ymd("2008-01-01")))))
> mp_btw <- fitted(lm(DOIS2Ydy~ConfFactor1+ConfFactor2+ConfFactor3, data = df %>% filter(as.Date(Date)<"2014-01-01", Date>="2008-01-01")))
> mp_pst <- fitted(lm(DOIS2Ydy~ConfFactor1+ConfFactor2+ConfFactor3, data = df %>% filter(as.Date(Date)>="2014-01-01")))
> 
> ils_pre <- c(rep(NA, 36), fitted(lm(DILS2Ydy~ConfFactor1+ConfFactor2, data = df %>% filter(as.Date(Date)<"2008-01-01"))))
> ils_btw <- fitted(lm(DILS2Ydy~ConfFactor1+ConfFactor2+ConfFactor3, data = df %>% filter(as.Date(Date)<"2014-01-01", Date>="2008-01-01")))
> ils_pst <- fitted(lm(DILS2Ydy~ConfFactor1+ConfFactor2+ConfFactor3, data = df %>% filter(as.Date(Date)>="2014-01-01")))
> 
> sto_pre <- c(fitted(lm(DLOGSTOXXdy~ConfFactor1+ConfFactor2, data = df %>% filter(as.Date(Date)<"2008-01-01"))))
> sto_btw <- fitted(lm(DLOGSTOXXdy~ConfFactor1+ConfFactor2+ConfFactor3, data = df %>% filter(as.Date(Date)<"2014-01-01", Date>="2008-01-01")))
> sto_pst <- fitted(lm(DLOGSTOXXdy~ConfFactor1+ConfFactor2+ConfFactor3, data = df %>% filter(as.Date(Date)>="2014-01-01")))
> 
> 
> mp <- c(mp_pre, mp_btw, mp_pst)
> ils <- c(ils_pre, ils_btw, ils_pst)
> sto <- c(sto_pre, sto_btw, sto_pst)
> df <- df %>% mutate(DOIS2Y = mp*100, DILS2Y = ils*100, DLOGSTOXX = sto)
> 
> df <- df %>% mutate(DDate = date_format("%b-%Y")(df$Date))
> df <- df %>% mutate(FDate = factor(df$Date, labels = df$DDate))
> 
> df <- df %>% select(DLOGSTOXX, DOIS2Y, DILS2Y, Date, FDate) %>%
+   mutate(mptype = case_when(
+     (sign(DOIS2Y) * sign(DLOGSTOXX) == -1) &
+       (sign(DILS2Y) == sign(DLOGSTOXX))  ~ "Odyssean events",
+     abs(sign(DOIS2Y) + sign(DLOGSTOXX) + sign(DILS2Y)) == 3 ~ "Delphic events",
+     TRUE ~ "Other events"
+   ))
> 
> 
> df_1 <- melt(df,id.vars = c("Date", "FDate", "mptype"))
Warning message:
attributes are not identical across measure variables; they will be dropped 
> levels(df_1$FDate) <- gsub(pattern = "-", x = levels(df_1$FDate), replacement = "\n")
> 
> 
> g1 <- ggplot(df_1 %>% filter(Date<"2014-01-01", Date>="2008-01-01", mptype !="Other events"), aes(y=value, x = FDate)) + 
+   geom_point(aes(color=mptype,  pch=variable), size = 1.2) + 
+   theme_minimal(base_size = 6) + 
+   scale_color_manual("", values = c("darkred", "darkblue")) + 
+   scale_shape_manual("", values = c(15, 16, 17)) +
+   theme(legend.position = "none") + xlab("") + ylab("") 
> 
> g2 <- ggplot(df_1 %>% filter(Date>="2014-01-01", mptype !="Other events"), aes(y=value, x = FDate)) + 
+   geom_point(aes(color=mptype, pch=variable), size = 1.2) + 
+   theme_minimal(base_size = 6) + 
+   theme(legend.position = "bottom") + 
+   scale_color_manual("", values = c("darkred", "darkblue")) + 
+   scale_shape_manual("", values = c(15, 16, 17)) +
+   xlab("") + ylab("")
> 
> 
> ggsave(filename = paste0(g_path, "Figure5.pdf"), plot = grid.arrange(g1, g2), 
+                          device = "pdf", width = 270, height = 180, units = "mm")
> 
> 
> # g1 <- ggplot(df_1 %>% filter(Date<"2014-01-01", Date>="2008-01-01"), aes(y=value, x = FDate)) + 
> #   geom_point(aes(color=mptype,  pch=variable), size = 1.2) + 
> #   theme_minimal(base_size = 4) + 
> #   scale_color_manual("", values = c("darkred", "darkblue", "darkgray")) + 
> #   scale_shape_manual("", values = c(15, 16, 17)) +
> #   theme(legend.position = "none") + xlab("") + ylab("") 
> # 
> # g2 <- ggplot(df_1 %>% filter(Date>="2014-01-01"), aes(y=value, x = FDate)) + 
> #   geom_point(aes(color=mptype, pch=variable), size = 1.2) + 
> #   theme_minimal(base_size = 4) + 
> #   theme(legend.position = "bottom") + 
> #   scale_color_manual("", values = c("darkred", "darkblue", "darkgray")) + 
> #   scale_shape_manual("", values = c(15, 16, 17)) +
> #   xlab("") + ylab("")
> # 
> # 
> # ggsave(filename = paste0(g_path, plot_col_all.pdf", 
> #        plot = grid.arrange(g1, g2), device = "pdf", width = 270, height = 180, units = "mm",)
> 
> 
> 
> 
> 
> 
> # g1 <- ggplot(df_1 %>% filter(Date<"2014-01-01", Date>="2008-01-01", mptype !="Other events"), aes(y=value, x = FDate)) + 
> #   geom_point(aes(color=mptype,  pch=variable), size = 1.2) + 
> #   theme_minimal(base_size = 9) + 
> #   scale_color_manual("", values = c("black", "darkgray")) + 
> #   scale_shape_manual("", values = c(15, 16, 17)) +
> #   theme(legend.position = "none") + xlab("") + ylab("") 
> # 
> # g2 <- ggplot(df_1 %>% filter(Date>="2014-01-01", mptype !="Other events"), aes(y=value, x = FDate)) + 
> #   geom_point(aes(color=mptype, pch=variable), size = 1.2) + 
> #   theme_minimal(base_size = 9) + 
> #   theme(legend.position = "bottom") + 
> #   scale_color_manual("", values = c("black", "darkgray")) + 
> #   scale_shape_manual("", values = c(15, 16, 17)) +
> #   xlab("") + ylab("")
> # 
> # 
> # ggsave(filename = "~/plot_bw.pdf", plot = grid.arrange(g1, g2), device = "pdf", width = 270, height = 180, units = "mm",)
> # 
> # 
> # 
> # g1 <- ggplot(df_1 %>% filter(Date<"2014-01-01", Date>="2008-01-01", mptype !="Other events"), aes(y=value, x = FDate)) + 
> #   geom_point(aes(color=mptype,  pch=variable), size = 1.2) + 
> #   theme_minimal(base_size = 7) + 
> #   scale_color_manual("", values = c("black", "darkgray")) + 
> #   scale_shape_manual("", values = c(15, 16, 17)) +
> #   theme(legend.position = "none") + xlab("") + ylab("") 
> # 
> # g2 <- ggplot(df_1 %>% filter(Date>="2014-01-01", mptype !="Other events"), aes(y=value, x = FDate)) + 
> #   geom_point(aes(color=mptype, pch=variable), size = 1.2) + 
> #   theme_minimal(base_size = 7) + 
> #   theme(legend.position = "bottom") + 
> #   scale_color_manual("", values = c("black", "darkgray")) + 
> #   scale_shape_manual("", values = c(15, 16, 17)) +
> #   xlab("") + ylab("")
> # 
> # 
> # ggsave(filename = paste0(g_path, "plot_bw_p.pdf", plot = grid.arrange(g1, g2), device = "pdf", width = 180, height = 270, units = "mm",)
> # 
> # 
> 
> 
> 
> 
> proc.time()
   user  system elapsed 
  1.792   0.106   1.887 
